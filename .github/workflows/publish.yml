name: Publish release
run-name: ${{ github.actor }} - ${{ github.event.release.tag_name }}

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout
        uses: actions/checkout@v4

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - run: corepack enable

      - run: echo "🚀 Node has been installed!"

      - name: Install dependencies
        run: yarn

      - run: echo "📦 Dependencies have been installed."

      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      - run: echo "🔍 The version number extracted from the tag is ${{ steps.get_version.outputs.version }}"

      - name: Run Vite build
        env:
          MODULE_VERSION: ${{steps.get_version.outputs.version-without-v}}
          GH_PROJECT: ${{github.repository}}
          GH_TAG: ${{github.event.release.tag_name}}
        run: yarn build

      - run: echo "🏗️ The build has been completed."

      - name: Create zip archive
        working-directory: dist
        run: zip -r ./module.zip module.json scripts/ styles/ templates/ packs/ icons/ art/

      - run: echo "📦 The zip archive has been created."

      - name: Update release with files
        id: create_version_release
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './dist/module.json, ./dist/module.zip'
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}

      - run: echo "🚀 The release has been updated with the new files."
